{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_1_2_0/src/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { useState } from 'react';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'HTML&CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'ReactJS',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Redux',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Typescript',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'RTK query',\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('active');\n  const removeTask = tasksId => {\n    setTasks(tasks.filter(t => t.id != tasksId));\n  };\n  const addTask = title => {\n    const task = {\n      id: v1(),\n      title,\n      isDone: false\n    };\n    setTasks([task, ...tasks]);\n  };\n  const filteredTask = filter => {\n    let tasksForTodolist = tasks;\n    if (filter === 'active') {\n      tasksForTodolist = tasks.filter(t => t.isDone);\n    }\n    if (filter === 'completed') {\n      tasksForTodolist = tasks.filter(t => !t.isDone);\n    }\n    setFilter(filter);\n    return tasksForTodolist;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: filteredTask,\n      removeTask: removeTask,\n      addTask: addTask,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"heMZO3Emp9eJ289Czt8QKLxS98Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","useState","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","removeTask","tasksId","t","addTask","task","filteredTask","tasksForTodolist"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_1_2_0/src/App.tsx"],"sourcesContent":["import './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {useState} from 'react';\r\nimport {v1} from 'uuid';\r\n\r\nexport type TaskType = {\r\n  id: string\r\n  title: string\r\n  isDone: boolean\r\n}\r\n\r\nexport type TypeFilteredTasks = 'all' | 'active' | 'completed';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState<Array<TaskType>>([\r\n    {id: v1(), title: 'HTML&CSS', isDone: true},\r\n    {id: v1(), title: 'JS', isDone: true},\r\n    {id: v1(), title: 'ReactJS', isDone: false},\r\n    {id: v1(), title: 'Redux', isDone: false},\r\n    {id: v1(), title: 'Typescript', isDone: false},\r\n    {id: v1(), title: 'RTK query', isDone: false},\r\n  ]);\r\n  const [filter, setFilter] = useState<TypeFilteredTasks>('active');\r\n\r\n  const removeTask = (tasksId: number) => {\r\n    setTasks(tasks.filter(t => t.id != tasksId));\r\n  }\r\n  const addTask = (title: string) => {\r\n    const task = {id: v1(), title, isDone: false};\r\n\r\n    setTasks([task, ...tasks]);\r\n  }\r\n\r\n  const filteredTask = (filter: TypeFilteredTasks) => {\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === 'active') {\r\n      tasksForTodolist = tasks.filter(t => t.isDone);\r\n    }\r\n    if (filter === 'completed') {\r\n      tasksForTodolist = tasks.filter(t => !t.isDone);\r\n    }\r\n\r\n    setFilter(filter);\r\n\r\n    return tasksForTodolist;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Todolist\r\n        title=\"What to learn\"\r\n        tasks={filteredTask}\r\n        removeTask={removeTask}\r\n        addTask={addTask}\r\n        filter={filter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,EAAE,QAAO,MAAM;AAAC;AAUxB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAkB,CAClD;IAACK,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAI,CAAC,EAC3C;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAI,CAAC,EACrC;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC3C;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAK,CAAC,EACzC;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC9C;IAACF,EAAE,EAAEJ,EAAE,EAAE;IAAEK,KAAK,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAK,CAAC,CAC9C,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAoB,QAAQ,CAAC;EAEjE,MAAMU,UAAU,GAAIC,OAAe,IAAK;IACtCP,QAAQ,CAACD,KAAK,CAACK,MAAM,CAACI,CAAC,IAAIA,CAAC,CAACP,EAAE,IAAIM,OAAO,CAAC,CAAC;EAC9C,CAAC;EACD,MAAME,OAAO,GAAIP,KAAa,IAAK;IACjC,MAAMQ,IAAI,GAAG;MAACT,EAAE,EAAEJ,EAAE,EAAE;MAAEK,KAAK;MAAEC,MAAM,EAAE;IAAK,CAAC;IAE7CH,QAAQ,CAAC,CAACU,IAAI,EAAE,GAAGX,KAAK,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMY,YAAY,GAAIP,MAAyB,IAAK;IAClD,IAAIQ,gBAAgB,GAAGb,KAAK;IAE5B,IAAIK,MAAM,KAAK,QAAQ,EAAE;MACvBQ,gBAAgB,GAAGb,KAAK,CAACK,MAAM,CAACI,CAAC,IAAIA,CAAC,CAACL,MAAM,CAAC;IAChD;IACA,IAAIC,MAAM,KAAK,WAAW,EAAE;MAC1BQ,gBAAgB,GAAGb,KAAK,CAACK,MAAM,CAACI,CAAC,IAAI,CAACA,CAAC,CAACL,MAAM,CAAC;IACjD;IAEAE,SAAS,CAACD,MAAM,CAAC;IAEjB,OAAOQ,gBAAgB;EACzB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,QAAQ;MACP,KAAK,EAAC,eAAe;MACrB,KAAK,EAAED,YAAa;MACpB,UAAU,EAAEL,UAAW;MACvB,OAAO,EAAEG,OAAQ;MACjB,MAAM,EAAEL;IAAO;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA9CQN,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}