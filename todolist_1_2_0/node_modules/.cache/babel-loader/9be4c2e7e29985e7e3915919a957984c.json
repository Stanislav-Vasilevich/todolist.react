{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_1_2_0/src/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { useState } from 'react';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntype;\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'HTML&CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'ReactJS',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Redux',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Typescript',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'RTK query',\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('all');\n  const removeTask = tasksId => {\n    setTasks(tasks.filter(t => t.id != tasksId));\n  };\n  const addTask = title => {\n    const task = {\n      id: v1(),\n      title,\n      isDone: false\n    };\n    setTasks([task, ...tasks]);\n  };\n  const filteredTask = () => {\n    let tasksForTodolist = tasks;\n    if (filter === 'active') {\n      tasksForTodolist = tasks.filter(t => t.isDone);\n    }\n    if (filter === 'completed') {\n      tasksForTodolist = tasks.filter(t => !t.isDone);\n    }\n    return tasksForTodolist;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: tasks,\n      removeTask: removeTask,\n      addTask: addTask,\n      filteredTask: filteredTask,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"rAgchnGnAsuFYk3ORN7buZEmUls=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","useState","v1","type","App","tasks","setTasks","id","title","isDone","filter","setFilter","removeTask","tasksId","t","addTask","task","filteredTask","tasksForTodolist"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_1_2_0/src/App.tsx"],"sourcesContent":["import './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\nimport {useState} from 'react';\r\nimport {v1} from 'uuid';\r\n\r\nexport type TaskType = {\r\n\tid: string\r\n\ttitle: string\r\n\tisDone: boolean\r\n}\r\n\r\ntype \r\n\r\nfunction App() {\r\n\tconst [tasks, setTasks] = useState<Array<TaskType>>([\r\n\t\t{ id: v1(), title: 'HTML&CSS', isDone: true },\r\n\t\t{ id: v1(), title: 'JS', isDone: true },\r\n\t\t{ id: v1(), title: 'ReactJS', isDone: false },\r\n\t\t{ id: v1(), title: 'Redux', isDone: false },\r\n\t\t{ id: v1(), title: 'Typescript', isDone: false },\r\n\t\t{ id: v1(), title: 'RTK query', isDone: false },\r\n\t]);\r\n\tconst [filter, setFilter] = useState('all');\r\n\r\n\tconst removeTask = (tasksId: number) => {\r\n\t\tsetTasks(tasks.filter(t => t.id != tasksId));\r\n\t}\r\n\tconst addTask = (title: string) => {\r\n\t\tconst task = {id: v1(), title, isDone: false};\r\n\r\n\t\tsetTasks([task, ...tasks]);\r\n\t}\r\n\r\n\tconst filteredTask = () => {\r\n\t\tlet tasksForTodolist = tasks;\r\n\t\tif(filter === 'active') {\r\n\t\t\ttasksForTodolist = tasks.filter(t => t.isDone);\r\n\t\t}\r\n\t\tif(filter === 'completed') {\r\n\t\t\ttasksForTodolist = tasks.filter(t => !t.isDone);\r\n\t\t}\r\n\r\n\t\treturn tasksForTodolist;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Todolist\r\n\t\t\t\ttitle=\"What to learn\"\r\n\t\t\t\ttasks={tasks}\r\n\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\taddTask={addTask}\r\n\t\t\t\tfilteredTask={filteredTask}\r\n\t\t\t\tfilter={filter}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,EAAE,QAAO,MAAM;AAAC;AAQxBC,IAAI;AAEJ,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAkB,CACnD;IAAEM,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC7C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACvC;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC7C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAEL,EAAE,EAAE;IAAEM,KAAK,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAM,CAAC,CAC/C,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMW,UAAU,GAAIC,OAAe,IAAK;IACvCP,QAAQ,CAACD,KAAK,CAACK,MAAM,CAACI,CAAC,IAAIA,CAAC,CAACP,EAAE,IAAIM,OAAO,CAAC,CAAC;EAC7C,CAAC;EACD,MAAME,OAAO,GAAIP,KAAa,IAAK;IAClC,MAAMQ,IAAI,GAAG;MAACT,EAAE,EAAEL,EAAE,EAAE;MAAEM,KAAK;MAAEC,MAAM,EAAE;IAAK,CAAC;IAE7CH,QAAQ,CAAC,CAACU,IAAI,EAAE,GAAGX,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMY,YAAY,GAAG,MAAM;IAC1B,IAAIC,gBAAgB,GAAGb,KAAK;IAC5B,IAAGK,MAAM,KAAK,QAAQ,EAAE;MACvBQ,gBAAgB,GAAGb,KAAK,CAACK,MAAM,CAACI,CAAC,IAAIA,CAAC,CAACL,MAAM,CAAC;IAC/C;IACA,IAAGC,MAAM,KAAK,WAAW,EAAE;MAC1BQ,gBAAgB,GAAGb,KAAK,CAACK,MAAM,CAACI,CAAC,IAAI,CAACA,CAAC,CAACL,MAAM,CAAC;IAChD;IAEA,OAAOS,gBAAgB;EACxB,CAAC;EAED,oBACC;IAAK,SAAS,EAAC,KAAK;IAAA,uBACnB,QAAC,QAAQ;MACR,KAAK,EAAC,eAAe;MACrB,KAAK,EAAEb,KAAM;MACb,UAAU,EAAEO,UAAW;MACvB,OAAO,EAAEG,OAAQ;MACjB,YAAY,EAAEE,YAAa;MAC3B,MAAM,EAAEP;IAAO;MAAA;MAAA;MAAA;IAAA;EACd;IAAA;IAAA;IAAA;EAAA,QACG;AAER;AAAC,GA5CQN,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}