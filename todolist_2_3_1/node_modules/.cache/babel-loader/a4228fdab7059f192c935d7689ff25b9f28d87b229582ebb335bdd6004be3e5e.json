{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_3_1/src/Todolist.tsx\";\nimport { AddItemForm } from \"./AddItemForm\";\nimport { EditableSpan } from \"./EditableSpan\";\nimport { Button, IconButton } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  const {\n    title,\n    tasks,\n    filter,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeTaskStatus,\n    todolistId,\n    removeTodolist,\n    updateTask,\n    updateTodolist\n  } = props;\n  const changeFilterTasksHandler = filter => {\n    changeFilter(filter, props.todolistId);\n  };\n  const removeTodolistHandler = () => {\n    removeTodolist(todolistId);\n  };\n  const addTaskCallback = title => {\n    addTask(title, props.todolistId);\n  };\n  const updateTodolistHandler = title => {\n    updateTodolist(props.todolistId, title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todolist-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(EditableSpan, {\n          value: title,\n          onChange: updateTodolistHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: 'x',\n        onClick: removeTodolistHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddItemForm, {\n      addItem: addTaskCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0422\\u0430\\u0441\\u043E\\u043A \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => {\n        const removeTaskHandler = () => {\n          removeTask(task.id, todolistId);\n        };\n        const changeTaskStatusHandler = e => {\n          const newStatusValue = e.currentTarget.checked;\n          changeTaskStatus(task.id, newStatusValue, todolistId);\n        };\n        const changeTaskTitleHandler = title => {\n          updateTask(todolistId, task.id, title);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.isDone ? 'is-done' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.isDone,\n            onChange: changeTaskStatusHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            value: task.title,\n            onChange: changeTaskTitleHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: removeTaskHandler,\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: 'outlined',\n        color: filter === 'all' ? 'primary' : 'inherit',\n        style: {\n          margin: '2px'\n        },\n        title: 'All',\n        onClick: () => changeFilterTasksHandler('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: 'outlined',\n        color: filter === 'active' ? 'primary' : 'inherit',\n        style: {\n          margin: '2px'\n        },\n        title: 'Active',\n        onClick: () => changeFilterTasksHandler('active'),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: 'outlined',\n        color: filter === 'completed' ? 'primary' : 'inherit',\n        style: {\n          margin: '2px'\n        },\n        title: 'Completed',\n        onClick: () => changeFilterTasksHandler('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["AddItemForm","EditableSpan","Button","IconButton","DeleteIcon","jsxDEV","_jsxDEV","Todolist","props","title","tasks","filter","removeTask","changeFilter","addTask","changeTaskStatus","todolistId","removeTodolist","updateTask","updateTodolist","changeFilterTasksHandler","removeTodolistHandler","addTaskCallback","updateTodolistHandler","children","className","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addItem","length","map","task","removeTaskHandler","id","changeTaskStatusHandler","e","newStatusValue","currentTarget","checked","changeTaskTitleHandler","isDone","type","variant","color","style","margin","_c","$RefreshReg$"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_3_1/src/Todolist.tsx"],"sourcesContent":["import {FilterValuesType, TaskType} from \"./App\";\r\nimport {ChangeEvent} from \"react\";\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EditableSpan} from \"./EditableSpan\";\r\nimport {Button, IconButton} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {PlaylistAddCheck} from '@mui/icons-material';\r\n\r\ntype PropsType = {\r\n\ttitle: string\r\n\ttodolistId: string\r\n\ttasks: TaskType[]\r\n\tremoveTask: (taskId: string, todolistId: string) => void\r\n\tchangeFilter: (filter: FilterValuesType, todolistId: string) => void\r\n\taddTask: (title: string, todolistId: string) => void\r\n\tchangeTaskStatus: (taskId: string, taskStatus: boolean, todolistId: string) => void\r\n\tfilter: FilterValuesType\r\n\tremoveTodolist: (todolistId: string) => void\r\n\tupdateTask: (todolistId: string, taskId: string, title: string) => void\r\n\tupdateTodolist: (todolistId: string, title: string) => void\r\n}\r\n\r\nexport const Todolist = (props: PropsType) => {\r\n\tconst {\r\n\t\ttitle,\r\n\t\ttasks,\r\n\t\tfilter,\r\n\t\tremoveTask,\r\n\t\tchangeFilter,\r\n\t\taddTask,\r\n\t\tchangeTaskStatus,\r\n\t\ttodolistId,\r\n\t\tremoveTodolist,\r\n\t\tupdateTask,\r\n\t\tupdateTodolist\r\n\t} = props\r\n\r\n\tconst changeFilterTasksHandler = (filter: FilterValuesType) => {\r\n\t\tchangeFilter(filter, props.todolistId)\r\n\t}\r\n\r\n\tconst removeTodolistHandler = () => {\r\n\t\tremoveTodolist(todolistId)\r\n\t}\r\n\r\n\tconst addTaskCallback = (title: string) => {\r\n\t\taddTask(title, props.todolistId)\r\n\t}\r\n\r\n\tconst updateTodolistHandler = (title: string) => {\r\n\t\tupdateTodolist(props.todolistId, title)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={\"todolist-title-container\"}>\r\n\t\t\t\t<h3><EditableSpan value={title} onChange={updateTodolistHandler}/></h3>\r\n\t\t\t\t<Button title={'x'} onClick={removeTodolistHandler}/>\r\n\t\t\t</div>\r\n\t\t\t<AddItemForm addItem={addTaskCallback}/>\r\n\t\t\t{\r\n\t\t\t\ttasks.length === 0\r\n\t\t\t\t\t? <p>Тасок нет</p>\r\n\t\t\t\t\t: <ul>\r\n\t\t\t\t\t\t{tasks.map((task) => {\r\n\r\n\t\t\t\t\t\t\tconst removeTaskHandler = () => {\r\n\t\t\t\t\t\t\t\tremoveTask(task.id, todolistId)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst changeTaskStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\t\t\tconst newStatusValue = e.currentTarget.checked\r\n\t\t\t\t\t\t\t\tchangeTaskStatus(task.id, newStatusValue, todolistId)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst changeTaskTitleHandler = (title: string) => {\r\n\t\t\t\t\t\t\t\tupdateTask(todolistId, task.id, title)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn <li key={task.id} className={task.isDone ? 'is-done' : ''}>\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={task.isDone} onChange={changeTaskStatusHandler}/>\r\n\t\t\t\t\t\t\t\t<EditableSpan value={task.title} onChange={changeTaskTitleHandler}/>\r\n\t\t\t\t\t\t\t\t<IconButton onClick={removeTaskHandler} aria-label=\"delete\">\r\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant={'outlined'} color={filter === 'all' ? 'primary' : 'inherit'} style={{margin: '2px'}} title={'All'}\r\n\t\t\t\t\t\t\t\tonClick={() => changeFilterTasksHandler('all')}>All</Button>\r\n\t\t\t\t<Button variant={'outlined'} color={filter === 'active' ? 'primary' : 'inherit'} style={{margin: '2px'}} title={'Active'}\r\n\t\t\t\t\t\t\t\tonClick={() => changeFilterTasksHandler('active')}>Active</Button>\r\n\t\t\t\t<Button variant={'outlined'} color={filter === 'completed' ? 'primary' : 'inherit'} style={{margin: '2px'}} title={'Completed'}\r\n\t\t\t\t\t\t\t\tonClick={() => changeFilterTasksHandler('completed')}>Completed</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}