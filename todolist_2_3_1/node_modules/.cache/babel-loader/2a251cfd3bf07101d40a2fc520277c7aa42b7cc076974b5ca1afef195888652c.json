{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_3_1/src/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Todolist } from \"./Todolist\";\nimport { useState } from \"react\";\nimport { v1 } from \"uuid\";\nimport { AddItemForm } from \"./AddItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: 'HTML&CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'ReactJS',\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: 'Rest API',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'GraphQL',\n      isDone: false\n    }]\n  });\n  const removeTask = (taskId, todolistId) => {\n    const newTodolistTasks = {\n      ...tasks,\n      [todolistId]: tasks[todolistId].filter(t => t.id !== taskId)\n    };\n    setTasks(newTodolistTasks);\n  };\n  const addTask = (title, todolistId) => {\n    const newTask = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    const newTodolistTasks = {\n      ...tasks,\n      [todolistId]: [newTask, ...tasks[todolistId]]\n    };\n    setTasks(newTodolistTasks);\n  };\n  const changeTaskStatus = (taskId, taskStatus, todolistId) => {\n    const newTodolistTasks = {\n      ...tasks,\n      [todolistId]: tasks[todolistId].map(t => t.id == taskId ? {\n        ...t,\n        isDone: taskStatus\n      } : t)\n    };\n    setTasks(newTodolistTasks);\n  };\n  const changeFilter = (filter, todolistId) => {\n    const newTodolists = todolists.map(tl => {\n      return tl.id === todolistId ? {\n        ...tl,\n        filter\n      } : tl;\n    });\n    setTodolists(newTodolists);\n  };\n  const removeTodolist = todolistId => {\n    const newTodolists = todolists.filter(tl => tl.id !== todolistId);\n    setTodolists(newTodolists);\n    delete tasks[todolistId];\n    setTasks({\n      ...tasks\n    });\n  };\n  const addTodolist = title => {\n    const todolistId = v1();\n    const newTodolist = {\n      id: todolistId,\n      title: title,\n      filter: 'all'\n    };\n    setTodolists([newTodolist, ...todolists]);\n    setTasks({\n      ...tasks,\n      [todolistId]: []\n    });\n  };\n  const updateTask = (todolistId, taskId, title) => {\n    const newTodolistTasks = {\n      ...tasks,\n      [todolistId]: tasks[todolistId].map(t => t.id === taskId ? {\n        ...t,\n        title\n      } : t)\n    };\n    setTasks(newTodolistTasks);\n  };\n  const updateTodolist = (todolistId, title) => {\n    const newTodolists = todolists.map(tl => tl.id === todolistId ? {\n      ...tl,\n      title\n    } : tl);\n    setTodolists(newTodolists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddItemForm, {\n      addItem: addTodolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), todolists.map(tl => {\n      const allTodolistTasks = tasks[tl.id];\n      let tasksForTodolist = allTodolistTasks;\n      if (tl.filter === 'active') {\n        tasksForTodolist = allTodolistTasks.filter(task => !task.isDone);\n      }\n      if (tl.filter === 'completed') {\n        tasksForTodolist = allTodolistTasks.filter(task => task.isDone);\n      }\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        todolistId: tl.id,\n        title: tl.title,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeTaskStatus,\n        filter: tl.filter,\n        removeTodolist: removeTodolist,\n        updateTask: updateTask,\n        updateTodolist: updateTodolist\n      }, tl.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 12\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"elepV0NGlYSfCqTewf03KXGLgfQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","useState","v1","AddItemForm","jsxDEV","_jsxDEV","App","_s","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","taskId","todolistId","newTodolistTasks","t","addTask","newTask","changeTaskStatus","taskStatus","map","changeFilter","newTodolists","tl","removeTodolist","addTodolist","newTodolist","updateTask","updateTodolist","className","children","addItem","fileName","_jsxFileName","lineNumber","columnNumber","allTodolistTasks","tasksForTodolist","task","_c","$RefreshReg$"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_3_1/src/App.tsx"],"sourcesContent":["import './App.css';\r\nimport {Todolist} from \"./Todolist\";\r\nimport {useState} from \"react\";\r\nimport {v1} from \"uuid\";\r\nimport {AddItemForm} from \"./AddItemForm\";\r\n\r\nexport type TaskType = {\r\n\tid: string\r\n\ttitle: string\r\n\tisDone: boolean\r\n}\r\n\r\nexport type FilterValuesType = 'all' | 'active' | 'completed'\r\n\r\ntype TodolistType = {\r\n\tid: string\r\n\ttitle: string\r\n\tfilter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n\t[key: string]: TaskType[]\r\n}\r\n\r\nfunction App() {\r\n\tlet todolistID1 = v1()\r\n\tlet todolistID2 = v1()\r\n\r\n\tlet [todolists, setTodolists] = useState<TodolistType[]>([\r\n\t\t{id: todolistID1, title: 'What to learn', filter: 'all'},\r\n\t\t{id: todolistID2, title: 'What to buy', filter: 'all'},\r\n\t])\r\n\r\n\tlet [tasks, setTasks] = useState<TasksStateType>({\r\n\t\t[todolistID1]: [\r\n\t\t\t{id: v1(), title: 'HTML&CSS', isDone: true},\r\n\t\t\t{id: v1(), title: 'JS', isDone: true},\r\n\t\t\t{id: v1(), title: 'ReactJS', isDone: false},\r\n\t\t],\r\n\t\t[todolistID2]: [\r\n\t\t\t{id: v1(), title: 'Rest API', isDone: true},\r\n\t\t\t{id: v1(), title: 'GraphQL', isDone: false},\r\n\t\t],\r\n\t})\r\n\r\n\tconst removeTask = (taskId: string, todolistId: string) => {\r\n\t\tconst newTodolistTasks = {...tasks, [todolistId]: tasks[todolistId].filter(t => t.id !== taskId)}\r\n\t\tsetTasks(newTodolistTasks)\r\n\t}\r\n\r\n\tconst addTask = (title: string, todolistId: string) => {\r\n\t\tconst newTask = {\r\n\t\t\tid: v1(),\r\n\t\t\ttitle: title,\r\n\t\t\tisDone: false\r\n\t\t}\r\n\t\tconst newTodolistTasks = {...tasks, [todolistId]: [newTask, ...tasks[todolistId]]}\r\n\t\tsetTasks(newTodolistTasks)\r\n\t}\r\n\r\n\r\n\tconst changeTaskStatus = (taskId: string, taskStatus: boolean, todolistId: string) => {\r\n\t\tconst newTodolistTasks = {\r\n\t\t\t...tasks,\r\n\t\t\t[todolistId]: tasks[todolistId].map(t => t.id == taskId ? {...t, isDone: taskStatus} : t)\r\n\t\t}\r\n\t\tsetTasks(newTodolistTasks)\r\n\t}\r\n\r\n\tconst changeFilter = (filter: FilterValuesType, todolistId: string) => {\r\n\t\tconst newTodolists = todolists.map(tl => {\r\n\t\t\treturn tl.id === todolistId ? {...tl, filter} : tl\r\n\t\t})\r\n\t\tsetTodolists(newTodolists)\r\n\t}\r\n\r\n\tconst removeTodolist = (todolistId: string) => {\r\n\t\tconst newTodolists = todolists.filter(tl => tl.id !== todolistId)\r\n\t\tsetTodolists(newTodolists)\r\n\r\n\t\tdelete tasks[todolistId]\r\n\t\tsetTasks({...tasks})\r\n\t}\r\n\r\n\tconst addTodolist = (title: string) => {\r\n\t\tconst todolistId = v1()\r\n\t\tconst newTodolist: TodolistType = {id: todolistId, title: title, filter: 'all'}\r\n\t\tsetTodolists([newTodolist, ...todolists])\r\n\t\tsetTasks({...tasks, [todolistId]: []})\r\n\t}\r\n\r\n\tconst updateTask = (todolistId: string, taskId: string, title: string) => {\r\n\t\tconst newTodolistTasks = {\r\n\t\t\t...tasks,\r\n\t\t\t[todolistId]: tasks[todolistId].map(t => t.id === taskId ? {...t, title} : t)\r\n\t\t}\r\n\t\tsetTasks(newTodolistTasks)\r\n\t}\r\n\r\n\tconst updateTodolist = (todolistId: string, title: string) => {\r\n\t\tconst newTodolists = todolists.map(tl => tl.id === todolistId ? {...tl, title} : tl)\r\n\t\tsetTodolists(newTodolists)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<AddItemForm addItem={addTodolist}/>\r\n\t\t\t{todolists.map((tl) => {\r\n\r\n\t\t\t\tconst allTodolistTasks = tasks[tl.id]\r\n\t\t\t\tlet tasksForTodolist = allTodolistTasks\r\n\r\n\t\t\t\tif (tl.filter === 'active') {\r\n\t\t\t\t\ttasksForTodolist = allTodolistTasks.filter(task => !task.isDone)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (tl.filter === 'completed') {\r\n\t\t\t\t\ttasksForTodolist = allTodolistTasks.filter(task => task.isDone)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <Todolist\r\n\t\t\t\t\tkey={tl.id}\r\n\t\t\t\t\ttodolistId={tl.id}\r\n\t\t\t\t\ttitle={tl.title}\r\n\t\t\t\t\ttasks={tasksForTodolist}\r\n\t\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\t\tchangeFilter={changeFilter}\r\n\t\t\t\t\taddTask={addTask}\r\n\t\t\t\t\tchangeTaskStatus={changeTaskStatus}\r\n\t\t\t\t\tfilter={tl.filter}\r\n\t\t\t\t\tremoveTodolist={removeTodolist}\r\n\t\t\t\t\tupdateTask={updateTask}\r\n\t\t\t\t\tupdateTodolist={updateTodolist}\r\n\t\t\t\t/>\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}