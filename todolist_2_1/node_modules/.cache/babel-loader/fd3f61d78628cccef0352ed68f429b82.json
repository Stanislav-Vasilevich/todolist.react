{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  console.log(\"Todolist\");\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskInputError, setTaskInputError] = useState(false);\n  const tasksList = props.tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0412\\u0430\\u0448 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B \\u043F\\u0443\\u0441\\u0442\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.tasks.map(t => {\n      const removeTaskHandler = () => props.removeTask(t.id);\n      const setTaskNewStatusHandler = e => props.setTaskNewStatus(t.id, e.currentTarget.checked);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: t.isDone,\n          onChange: setTaskNewStatusHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: t.isDone ? \"task-done\" : \"task\",\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"x\",\n          onClickHandler: removeTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 11\n  }, this);\n  const onClickAddTaskHandler = () => {\n    const trimmedTaskTitle = taskTitle.trim();\n    if (trimmedTaskTitle) {\n      if (isTitleLengthValid) {\n        props.addTask(trimmedTaskTitle);\n        setTaskTitle(\"\");\n      }\n    } else {\n      setTaskInputError(true);\n      setTaskTitle(\"\");\n    }\n  };\n  const onKeyDownAddTaskHandler = e => {\n    if (e.key === \"Enter\") {\n      onClickAddTaskHandler();\n    }\n  };\n  const isTitleLengthValid = taskTitle.length < 15;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"max 15 characters\",\n        value: taskTitle,\n        onChange: e => {\n          taskInputError && setTaskInputError(false);\n          setTaskTitle(e.currentTarget.value);\n        },\n        className: taskInputError ? \"error\" : \"\",\n        onKeyDown: onKeyDownAddTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClickHandler: onClickAddTaskHandler,\n        isDisabled: !isTitleLengthValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), !isTitleLengthValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Max length title is 15 characters!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }, this), taskInputError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Title is required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), tasksList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412\\u0441\\u0435\",\n        classes: props.filter === \"all\" ? \"btn-filter-active\" : \"\",\n        onClickHandler: () => props.changeFilter(\"all\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435\",\n        classes: props.filter === \"active\" ? \"btn-filter-active\" : \"\",\n        onClickHandler: () => props.changeFilter(\"active\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435\",\n        classes: props.filter === \"completed\" ? \"btn-filter-active\" : \"\",\n        onClickHandler: () => props.changeFilter(\"completed\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Todolist, \"MKH0+H0vtw26Mez5CkeB0KMFhZo=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","Todolist","props","console","log","taskTitle","setTaskTitle","taskInputError","setTaskInputError","tasksList","tasks","length","map","t","removeTaskHandler","removeTask","id","setTaskNewStatusHandler","e","setTaskNewStatus","currentTarget","checked","isDone","title","onClickAddTaskHandler","trimmedTaskTitle","trim","isTitleLengthValid","addTask","onKeyDownAddTaskHandler","key","value","color","filter","changeFilter"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/Todolist.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent, ChangeEvent } from \"react\"\r\nimport { FilterValuesType, TaskType } from \"./App\"\r\nimport { Button } from \"./Button\"\r\n\r\ntype TodolistPropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    filter: FilterValuesType\r\n    addTask: (title: string) => void\r\n    removeTask: (taskId: string) => void\r\n    changeFilter: (newFilter: FilterValuesType) => void\r\n    setTaskNewStatus: (taskId: string, newStatus: boolean) => void\r\n}\r\n\r\nexport const Todolist = (props: TodolistPropsType) => {\r\n    console.log(\"Todolist\");\r\n\r\n    const [taskTitle, setTaskTitle] = useState(\"\")\r\n    const [taskInputError, setTaskInputError] = useState(false)\r\n\r\n    const tasksList: JSX.Element = props.tasks.length === 0\r\n        ? <div>Ваш список дел пуст</div>\r\n        : <ul>\r\n            {\r\n                props.tasks.map((t: TaskType) => {\r\n                    const removeTaskHandler = () => props.removeTask(t.id)\r\n                    const setTaskNewStatusHandler = (e: ChangeEvent<HTMLInputElement>) => props.setTaskNewStatus(t.id, e.currentTarget.checked)\r\n                    return (\r\n                        <li>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={t.isDone}\r\n                                onChange={setTaskNewStatusHandler}\r\n                            />\r\n                            <span className={t.isDone ? \"task-done\" : \"task\"}>{t.title}</span>\r\n                            <Button\r\n                                title=\"x\"\r\n                                onClickHandler={removeTaskHandler}\r\n                            />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n\r\n    const onClickAddTaskHandler = () => {\r\n        const trimmedTaskTitle = taskTitle.trim()\r\n        if (trimmedTaskTitle) {\r\n            if (isTitleLengthValid) {\r\n                props.addTask(trimmedTaskTitle)\r\n                setTaskTitle(\"\")\r\n            }\r\n        } else {\r\n            setTaskInputError(true)\r\n            setTaskTitle(\"\")\r\n        }\r\n\r\n\r\n    }\r\n    const onKeyDownAddTaskHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            onClickAddTaskHandler()\r\n        }\r\n    }\r\n    const isTitleLengthValid = taskTitle.length < 15\r\n    return (\r\n        <div className=\"todolist\">\r\n            <h3>{props.title}</h3>\r\n            <div>\r\n                <input\r\n                    placeholder=\"max 15 characters\"\r\n                    value={taskTitle}\r\n                    onChange={e => {\r\n                            taskInputError && setTaskInputError(false)\r\n                            setTaskTitle(e.currentTarget.value)\r\n                        }\r\n                    }\r\n                    className={taskInputError ? \"error\" : \"\"}\r\n                    onKeyDown={onKeyDownAddTaskHandler}\r\n                />\r\n                <Button\r\n                    title=\"+\"\r\n                    onClickHandler={onClickAddTaskHandler}\r\n                    isDisabled={!isTitleLengthValid}\r\n                />\r\n                {!isTitleLengthValid && <div style={{ color: \"red\" }}>Max length title is 15 characters!</div>}\r\n                {taskInputError && <div style={{ color: \"red\" }}>Title is required!</div>}\r\n\r\n            </div>\r\n            {tasksList}\r\n            <div>\r\n                <Button\r\n                    title=\"Все\"\r\n                    classes={props.filter === \"all\" ? \"btn-filter-active\" : \"\"}\r\n                    onClickHandler={() => props.changeFilter(\"all\")}\r\n                />\r\n                <Button\r\n                    title=\"В работе\"\r\n                    classes={props.filter === \"active\" ? \"btn-filter-active\" : \"\"}\r\n                    onClickHandler={() => props.changeFilter(\"active\")}\r\n                />\r\n                <Button\r\n                    title=\"Выполненные\"\r\n                    classes={props.filter === \"completed\" ? \"btn-filter-active\" : \"\"}\r\n                    onClickHandler={() => props.changeFilter(\"completed\")}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}