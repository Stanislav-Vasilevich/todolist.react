{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/Button/Button.tsx\";\nimport s from './Button.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    name,\n    filter,\n    onClick\n  } = _ref;\n  if (filter === 'all') {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter ? s.active : '',\n      onClick: () => onClick(name),\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this);\n  }\n  if (filter === 'active') {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter ? s.active : '',\n      onClick: () => onClick(name),\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n  if (filter === 'completed') {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: filter ? s.active : '',\n      onClick: () => onClick(name),\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this);\n  }\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["s","Button","name","filter","onClick","active"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/Button/Button.tsx"],"sourcesContent":["import {FC} from 'react';\nimport s from './Button.module.css';\nimport {FilterValuesType} from '../App/App';\n\ntype PropsType = {\n\tname: string\n\tfilter?: FilterValuesType\n\tonClick: (value: string) => void\n}\n\nconst Button: FC<PropsType> = ({name, filter, onClick}) => {\n\tif(filter === 'all') {\n\t\treturn <button className={filter ? s.active : ''} onClick={() => onClick(name)}>{name}</button>\n\t}\n\n\tif(filter === 'active') {\n\t\treturn <button className={filter ? s.active : ''} onClick={() => onClick(name)}>{name}</button>\n\t}\n\n\tif(filter === 'completed') {\n\t\treturn <button className={filter ? s.active : ''} onClick={() => onClick(name)}>{name}</button>\n\t}\n}\n\nexport default Button;\n"],"mappings":";AACA,OAAOA,CAAC,MAAM,qBAAqB;AAAC;AASpC,MAAMC,MAAqB,GAAG,QAA6B;EAAA,IAA5B;IAACC,IAAI;IAAEC,MAAM;IAAEC;EAAO,CAAC;EACrD,IAAGD,MAAM,KAAK,KAAK,EAAE;IACpB,oBAAO;MAAQ,SAAS,EAAEA,MAAM,GAAGH,CAAC,CAACK,MAAM,GAAG,EAAG;MAAC,OAAO,EAAE,MAAMD,OAAO,CAACF,IAAI,CAAE;MAAA,UAAEA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAU;EAChG;EAEA,IAAGC,MAAM,KAAK,QAAQ,EAAE;IACvB,oBAAO;MAAQ,SAAS,EAAEA,MAAM,GAAGH,CAAC,CAACK,MAAM,GAAG,EAAG;MAAC,OAAO,EAAE,MAAMD,OAAO,CAACF,IAAI,CAAE;MAAA,UAAEA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAU;EAChG;EAEA,IAAGC,MAAM,KAAK,WAAW,EAAE;IAC1B,oBAAO;MAAQ,SAAS,EAAEA,MAAM,GAAGH,CAAC,CAACK,MAAM,GAAG,EAAG;MAAC,OAAO,EAAE,MAAMD,OAAO,CAACF,IAAI,CAAE;MAAA,UAAEA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAU;EAChG;AACD,CAAC;AAAA,KAZKD,MAAqB;AAc3B,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}