{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/Todolist/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport s from './Todolist.module.css';\nimport Button from '../Button/Button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todolist = _ref => {\n  _s();\n  let {\n    title,\n    tasks,\n    date,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeStatus\n  } = _ref;\n  const [value, setValue] = useState('');\n  const changeValue = e => {\n    setValue(e.currentTarget.value);\n  };\n  const addTaskHandler = () => {\n    const valueTrim = value.trim();\n    if (valueTrim === '') return;\n    addTask(valueTrim);\n    setValue('');\n  };\n  const onKeyPressHandler = e => {\n    if (e.key === 'Enter') {\n      addTaskHandler();\n    }\n  };\n  const changeFilterHandler = filter => {\n    changeFilter(filter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: s.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.date,\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.input,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.error,\n        onChange: changeValue,\n        value: value,\n        onKeyUp: onKeyPressHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.errorMessage,\n        children: \"Title is reqi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: '+',\n        onClick: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !tasks.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.not,\n        children: \"-- no tasks --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this) : tasks.map(t => {\n        const onChangeHandler = e => {\n          changeStatus(t.id, e.currentTarget.checked);\n        };\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: t.isDone,\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: t.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTask(t.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        name: 'All',\n        onClick: () => changeFilterHandler('all')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Active',\n        onClick: () => changeFilterHandler('active')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Completed',\n        onClick: () => changeFilterHandler('completed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Todolist, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["s","Button","useState","Todolist","title","tasks","date","removeTask","changeFilter","addTask","changeStatus","value","setValue","changeValue","e","currentTarget","addTaskHandler","valueTrim","trim","onKeyPressHandler","key","changeFilterHandler","filter","input","error","errorMessage","length","not","map","t","onChangeHandler","id","checked","isDone"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/Todolist/Todolist.tsx"],"sourcesContent":["import {FilterValuesType, TaskType} from '../App/App';\nimport s from './Todolist.module.css';\nimport Button from '../Button/Button';\nimport {ChangeEvent, KeyboardEvent, useState} from 'react';\n\ntype PropsType = {\n  title: string\n  tasks: Array<TaskType>\n  date?: string\n  removeTask: (taskId: string) => void\n  changeFilter: (value: FilterValuesType) => void\n  addTask: (id: string) => void\n  changeStatus: (taskId: string, isDone: boolean) => void\n}\n\nconst Todolist = ({\n    title,\n    tasks,\n    date,\n    removeTask,\n    changeFilter,\n    addTask,\n    changeStatus\n  }: PropsType) => {\n  const [value, setValue] = useState('');\n\n  const changeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.currentTarget.value);\n  }\n  const addTaskHandler = () => {\n    const valueTrim = value.trim();\n\n    if(valueTrim === '') return;\n\n    addTask(valueTrim);\n    setValue('');\n  }\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      addTaskHandler();\n    }\n  }\n  const changeFilterHandler = (filter: FilterValuesType) => {\n    changeFilter(filter);\n  }\n\n  return (\n    <div>\n      <h3 className={s.title}>{title}</h3>\n      <div className={s.date}>{date}</div>\n      <div className={s.input}>\n        <input className={s.error} onChange={changeValue} value={value} onKeyUp={onKeyPressHandler}/>\n        <span className={s.errorMessage}>Title is reqi</span>\n        <Button name={'+'} onClick={addTaskHandler}/>\n      </div>\n      <ul>\n        {\n          !tasks.length\n            ? <div className={s.not}>-- no tasks --</div>\n            : tasks.map(t => {\n              const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n                changeStatus(t.id, e.currentTarget.checked);\n              }\n\n              return (\n                <li key={t.id}>\n                  <input type=\"checkbox\" checked={t.isDone} onChange={onChangeHandler}/> <span>{t.title}</span>\n                  <button onClick={() => removeTask(t.id)}>X\n                  </button>\n                </li>\n              )\n            })\n        }\n      </ul>\n      <div>\n        <Button name={'All'} onClick={() => changeFilterHandler('all')}/>\n        <Button name={'Active'} onClick={() => changeFilterHandler('active')}/>\n        <Button name={'Completed'} onClick={() => changeFilterHandler('completed')}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Todolist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}