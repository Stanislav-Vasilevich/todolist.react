{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/App/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Todolist from \"../Todolist/Todolist\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'HTML&CSS',\n    isDone: true\n  }, {\n    id: 2,\n    title: 'JS',\n    isDone: true\n  }, {\n    id: 3,\n    title: 'ReactJS',\n    isDone: false\n  }, {\n    id: 4,\n    title: 'Redux',\n    isDone: false\n  }, {\n    id: 5,\n    title: 'Typescript',\n    isDone: false\n  }, {\n    id: 6,\n    title: 'RTK query',\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('All');\n  const [date, setDate] = useState(new Date());\n  console.log(date.getDay());\n  const removeTask = taskId => {\n    const newTasks = tasks.filter(t => t.id !== taskId);\n    setTasks(newTasks);\n  };\n  const changeFilter = value => {\n    setFilter(value);\n  };\n  let filteredTasks = tasks;\n  if (filter === 'Active') {\n    filteredTasks = tasks.filter(t => !t.isDone);\n  }\n  if (filter === 'Completed') {\n    filteredTasks = tasks.filter(t => t.isDone);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: 'What to learn?',\n      tasks: filteredTasks,\n      date: '13.09.2024',\n      removeTask: removeTask,\n      changeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ocer12PgKZYmotlmjjBrl64rSxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","useState","App","tasks","setTasks","id","title","isDone","filter","setFilter","date","setDate","Date","console","log","getDay","removeTask","taskId","newTasks","t","changeFilter","value","filteredTasks"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/App/App.tsx"],"sourcesContent":["import './App.css';\r\nimport Todolist from \"../Todolist/Todolist\";\r\nimport {useState} from \"react\";\r\n\r\nexport type TaskType = {\r\n\tid: number\r\n\ttitle: string\r\n\tisDone: boolean\r\n}\r\n\r\nexport type FilterValuesType = 'All' | 'Active' | 'Completed';\r\n\r\nfunction App() {\r\n\tconst [tasks, setTasks] = useState<Array<TaskType>>([\r\n\t\t{ id: 1, title: 'HTML&CSS', isDone: true },\r\n\t\t{ id: 2, title: 'JS', isDone: true },\r\n\t\t{ id: 3, title: 'ReactJS', isDone: false },\r\n\t\t{ id: 4, title: 'Redux', isDone: false },\r\n\t\t{ id: 5, title: 'Typescript', isDone: false },\r\n\t\t{ id: 6, title: 'RTK query', isDone: false },\r\n\t]);\r\n\tconst [filter, setFilter] = useState<FilterValuesType>('All');\r\n\tconst [date, setDate] = useState(new Date());\r\n\r\n\tconsole.log(date.getDay());\r\n\r\n\tconst removeTask = (taskId: number) => {\r\n\t\tconst newTasks = tasks.filter(t => t.id !== taskId);\r\n\t\tsetTasks(newTasks);\r\n\t}\r\n\tconst changeFilter = (value: FilterValuesType) => {\r\n\t\tsetFilter(value);\r\n\t}\r\n\r\n\tlet filteredTasks = tasks;\r\n\tif(filter === 'Active') {\r\n\t\tfilteredTasks = tasks.filter(t => !t.isDone);\r\n\t}\r\n\tif(filter === 'Completed') {\r\n\t\tfilteredTasks = tasks.filter(t => t.isDone);\r\n\t}\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n\t\t\t\t\t\t\ttitle={'What to learn?'}\r\n\t\t\t\t\t\t\ttasks={filteredTasks}\r\n\t\t\t\t\t\t\tdate={'13.09.2024'}\r\n\t\t\t\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\t\t\t\tchangeFilter={changeFilter}\r\n\t\t\t\t\t\t/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAU/B,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAkB,CACnD;IAAEI,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;EAAK,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC,EACpC;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAM,CAAC,EACxC;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAM,CAAC,EAC7C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAM,CAAC,CAC5C,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAmB,KAAK,CAAC;EAC7D,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,EAAE,CAAC;EAE5CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,MAAM,EAAE,CAAC;EAE1B,MAAMC,UAAU,GAAIC,MAAc,IAAK;IACtC,MAAMC,QAAQ,GAAGf,KAAK,CAACK,MAAM,CAACW,CAAC,IAAIA,CAAC,CAACd,EAAE,KAAKY,MAAM,CAAC;IACnDb,QAAQ,CAACc,QAAQ,CAAC;EACnB,CAAC;EACD,MAAME,YAAY,GAAIC,KAAuB,IAAK;IACjDZ,SAAS,CAACY,KAAK,CAAC;EACjB,CAAC;EAED,IAAIC,aAAa,GAAGnB,KAAK;EACzB,IAAGK,MAAM,KAAK,QAAQ,EAAE;IACvBc,aAAa,GAAGnB,KAAK,CAACK,MAAM,CAACW,CAAC,IAAI,CAACA,CAAC,CAACZ,MAAM,CAAC;EAC7C;EACA,IAAGC,MAAM,KAAK,WAAW,EAAE;IAC1Bc,aAAa,GAAGnB,KAAK,CAACK,MAAM,CAACW,CAAC,IAAIA,CAAC,CAACZ,MAAM,CAAC;EAC5C;EAEG,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,uBAChB,QAAC,QAAQ;MACd,KAAK,EAAE,gBAAiB;MACxB,KAAK,EAAEe,aAAc;MACrB,IAAI,EAAE,YAAa;MACnB,UAAU,EAAEN,UAAW;MACvB,YAAY,EAAEI;IAAa;MAAA;MAAA;MAAA;IAAA;EAC1B;IAAA;IAAA;IAAA;EAAA,QACM;AAEd;AAAC,GAzCQlB,GAAG;AAAA,KAAHA,GAAG;AA2CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}