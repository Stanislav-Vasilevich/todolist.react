{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\n//Create\n//Read(filter, sort, search, view mode)\n//Update\n//Delete\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todolists, setTodolists] = useState([{\n    id: v1(),\n    title: \"What to learn\",\n    filter: 'all',\n    tasks: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS/TS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"REDUX\",\n      isDone: true\n    }]\n  }, {\n    id: v1(),\n    title: \"What to bye\",\n    filter: 'active',\n    tasks: [{\n      id: v1(),\n      title: \"Beer\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Cheeps\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Whisk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"Cola\",\n      isDone: true\n    }]\n  }]);\n\n  //BLL:\n  const todolistTitle = \"What to learn\";\n  const [tasks, setTasks] = React.useState([\n  //initial state    #123\n  {\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS/TS\",\n    isDone: true\n  },\n  // { id: v1(), title: \"REDUX\", isDone: false },\n  {\n    id: v1(),\n    title: \"REDUX\",\n    isDone: true\n  }]);\n  const removeTask = taskId => {\n    //1. #234 => new array\n    const nextState = tasks.filter(t => t.id !== taskId);\n    //2. set state\n    setTasks(nextState);\n  };\n  const addTask = title => {\n    const newTask = {\n      title: title,\n      isDone: false,\n      id: v1()\n    };\n    const copyState = [...tasks, newTask];\n    setTasks(copyState);\n  };\n  const setTaskNewStatus = (taskId, newStatus) => {\n    const nextState = tasks.map(t => t.id === taskId ? {\n      ...t,\n      isDone: newStatus\n    } : t);\n    setTasks(nextState);\n  };\n\n  //GUI:\n  const [filter, setFilter] = useState(\"all\");\n  let filteredTasks = tasks;\n  if (filter === \"active\") {\n    filteredTasks = tasks.filter(t => t.isDone === false);\n  }\n  if (filter === \"completed\") {\n    filteredTasks = tasks.filter(t => t.isDone === true);\n  }\n  const changeFilter = newFilter => {\n    setFilter(newFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: todolistTitle,\n      tasks: filteredTasks,\n      filter: filter,\n      addTask: addTask,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      setTaskNewStatus: setTaskNewStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"i1Ji19Z2bYTkGJWtNtK+2oPUIAM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolists","setTodolists","id","title","filter","tasks","isDone","todolistTitle","setTasks","removeTask","taskId","nextState","t","addTask","newTask","copyState","setTaskNewStatus","newStatus","map","setFilter","filteredTasks","changeFilter","newFilter"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { Todolist } from './Todolist';\r\nimport { v1 } from 'uuid';\r\n\r\n//Create\r\n//Read(filter, sort, search, view mode)\r\n//Update\r\n//Delete\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type TodolistType = {\r\n\tid: string\r\n\ttitle: string\r\n\tfilter: FilterValuesType\r\n\ttasks: Array<TaskType>\r\n}\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\n\r\n\r\nfunction App() {\r\n\tconst [todolists, setTodolists] = useState<Array<TodolistType>>([\r\n\t\t{\r\n\t\t\tid: v1(),\r\n\t\t\ttitle: \"What to learn\",\r\n\t\t\tfilter: 'all',\r\n\t\t\ttasks: [\r\n\t\t\t\t{ id: v1(), title: \"HTML&CSS\", isDone: true },\r\n\t\t\t\t{ id: v1(), title: \"JS/TS\", isDone: false },\r\n\t\t\t\t{ id: v1(), title: \"REDUX\", isDone: true },\r\n\t\t\t]},\r\n\t\t{\r\n\t\t\tid: v1(),\r\n\t\t\ttitle: \"What to bye\",\r\n\t\t\tfilter: 'active',\r\n\t\t\ttasks: [\r\n\t\t\t\t{ id: v1(), title: \"Beer\", isDone: true },\r\n\t\t\t\t{ id: v1(), title: \"Cheeps\", isDone: true },\r\n\t\t\t\t{ id: v1(), title: \"Whisk\", isDone: true },\r\n\t\t\t\t{ id: v1(), title: \"Cola\", isDone: true },\r\n\t\t\t]},\r\n\t]);\r\n\r\n    //BLL:\r\n    const todolistTitle = \"What to learn\"\r\n    const [tasks, setTasks] = React.useState<TaskType []>([   //initial state    #123\r\n        { id: v1(), title: \"HTML&CSS\", isDone: true },\r\n        { id: v1(), title: \"JS/TS\", isDone: true },\r\n        // { id: v1(), title: \"REDUX\", isDone: false },\r\n        { id: v1(), title: \"REDUX\", isDone: true },\r\n    ])\r\n\r\n\r\n    const removeTask = (taskId: string) => {\r\n        //1. #234 => new array\r\n        const nextState: Array<TaskType> = tasks.filter(t => t.id !== taskId)\r\n        //2. set state\r\n        setTasks(nextState)\r\n    }\r\n    const addTask = (title: string) => {\r\n        const newTask: TaskType = {\r\n            title: title,\r\n            isDone: false,\r\n            id: v1()\r\n        }\r\n        const copyState = [...tasks, newTask]\r\n        setTasks(copyState)\r\n    }\r\n    const setTaskNewStatus = (taskId: string, newStatus: boolean) => {\r\n        const nextState: Array<TaskType> = tasks.map(t => t.id === taskId ? {...t, isDone: newStatus} : t)\r\n        setTasks(nextState)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //GUI:\r\n    const [filter, setFilter] = useState<FilterValuesType>(\"all\")\r\n\r\n    let filteredTasks:  Array<TaskType> = tasks\r\n    if(filter === \"active\"){\r\n        filteredTasks = tasks.filter(t => t.isDone === false)\r\n    }\r\n    if(filter === \"completed\"){\r\n        filteredTasks = tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    const changeFilter = (newFilter: FilterValuesType) => {\r\n        setFilter(newFilter)\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist\r\n                title={todolistTitle}\r\n                tasks={filteredTasks}\r\n                filter={filter}\r\n                addTask={addTask}\r\n                removeTask={removeTask}\r\n                changeFilter={changeFilter}\r\n                setTaskNewStatus={setTaskNewStatus}\r\n            />\r\n\r\n\r\n            {/* Todolist({title: \"What to learn\"}) */}\r\n            {/* Todolist({title: \"What to buy\"}) */}\r\n            {/* <div className=\"todolist\">\r\n                <h3>What to buy</h3>\r\n                <div>\r\n                    <input/>\r\n                    <button>+</button>\r\n                </div>\r\n                <ul>\r\n                    <li><input type=\"checkbox\" checked={true}/> <span>Milk</span></li>\r\n                    <li><input type=\"checkbox\" checked={true}/> <span>Bread</span></li>\r\n                    <li><input type=\"checkbox\" checked={false}/> <span>Butter</span></li>\r\n                </ul>\r\n                <div>\r\n                    <button>All</button>\r\n                    <button>Active</button>\r\n                    <button>Completed</button>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}