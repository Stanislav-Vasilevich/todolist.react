{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = props => {\n  _s();\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskInputError, setTaskInputError] = useState(false);\n  const tasksList = props.tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0412\\u0430\\u0448 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B \\u043F\\u0443\\u0441\\u0442\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.tasks.map(t => {\n      const removeTaskHandler = () => props.removeTask(t.id, props.todolistId);\n      const setTaskNewStatusHandler = e => props.setTaskNewStatus(t.id, e.currentTarget.checked, props.todolistId);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: t.isDone,\n          onChange: setTaskNewStatusHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: t.isDone ? 'task-done' : 'task',\n          children: t.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"x\",\n          onClickHandler: removeTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n  const onClickAddTaskHandler = () => {\n    const trimmedTaskTitle = taskTitle.trim();\n    if (trimmedTaskTitle) {\n      if (isTitleLengthValid) {\n        props.addTask(trimmedTaskTitle, props.todolistId);\n        setTaskTitle('');\n      }\n    } else {\n      setTaskInputError(true);\n      setTaskTitle('');\n    }\n  };\n  const onKeyDownAddTaskHandler = e => {\n    if (e.key === 'Enter') {\n      onClickAddTaskHandler();\n    }\n  };\n  const isTitleLengthValid = taskTitle.length < 15;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeTodolist(),\n      children: \"\\u0425\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"max 15 characters\",\n        value: taskTitle,\n        onChange: e => {\n          taskInputError && setTaskInputError(false);\n          setTaskTitle(e.currentTarget.value);\n        },\n        className: taskInputError ? 'error' : '',\n        onKeyDown: onKeyDownAddTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"+\",\n        onClickHandler: onClickAddTaskHandler,\n        isDisabled: !isTitleLengthValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), !isTitleLengthValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Max length title is 15 characters!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }, this), taskInputError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Title is required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), tasksList, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412\\u0441\\u0435\",\n        classes: props.filter === 'all' ? 'btn-filter-active' : '',\n        onClickHandler: () => props.changeTodolistFilter('all', props.todolistId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412 \\u0440\\u0430\\u0431\\u043E\\u0442\\u0435\",\n        classes: props.filter === 'active' ? 'btn-filter-active' : '',\n        onClickHandler: () => props.changeTodolistFilter('active', props.todolistId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435\",\n        classes: props.filter === 'completed' ? 'btn-filter-active' : '',\n        onClickHandler: () => props.changeTodolistFilter('completed', props.todolistId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Todolist, \"0mXCLcbRxk9HpBXpbOapmbYG1pY=\");\n_c = Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","Button","Todolist","props","taskTitle","setTaskTitle","taskInputError","setTaskInputError","tasksList","tasks","length","map","t","removeTaskHandler","removeTask","id","todolistId","setTaskNewStatusHandler","e","setTaskNewStatus","currentTarget","checked","isDone","title","onClickAddTaskHandler","trimmedTaskTitle","trim","isTitleLengthValid","addTask","onKeyDownAddTaskHandler","key","removeTodolist","value","color","filter","changeTodolistFilter"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/Todolist.tsx"],"sourcesContent":["import React, {useState, KeyboardEvent, ChangeEvent} from 'react'\r\nimport {FilterValuesType, TaskType} from './App'\r\nimport {Button} from './Button'\r\n\r\ntype TodolistPropsType = {\r\n  todolistId: string\r\n  title: string\r\n  tasks: Array<TaskType>\r\n  filter: FilterValuesType\r\n  addTask: (title: string, todolistId: string) => void\r\n  removeTask: (taskId: string, todolistId: string) => void\r\n  changeTodolistFilter: (newFilter: FilterValuesType, todolistId: string) => void\r\n  setTaskNewStatus: (taskId: string, newStatus: boolean, todolistId: string) => void\r\n  removeTodolist: (todolistId: string) => void\r\n}\r\n\r\nexport const Todolist = (props: TodolistPropsType) => {\r\n  const [taskTitle, setTaskTitle] = useState('')\r\n  const [taskInputError, setTaskInputError] = useState(false)\r\n\r\n  const tasksList: JSX.Element = props.tasks.length === 0\r\n    ? <div>Ваш список дел пуст</div>\r\n    : <ul>\r\n      {\r\n        props.tasks.map((t: TaskType) => {\r\n          const removeTaskHandler = () => props.removeTask(t.id, props.todolistId)\r\n          const setTaskNewStatusHandler = (e: ChangeEvent<HTMLInputElement>) => props.setTaskNewStatus(t.id, e.currentTarget.checked, props.todolistId)\r\n          return (\r\n            <li>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={t.isDone}\r\n                onChange={setTaskNewStatusHandler}\r\n              />\r\n              <span className={t.isDone ? 'task-done' : 'task'}>{t.title}</span>\r\n              <Button\r\n                title=\"x\"\r\n                onClickHandler={removeTaskHandler}\r\n              />\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n\r\n  const onClickAddTaskHandler = () => {\r\n    const trimmedTaskTitle = taskTitle.trim()\r\n    if (trimmedTaskTitle) {\r\n      if (isTitleLengthValid) {\r\n        props.addTask(trimmedTaskTitle, props.todolistId)\r\n        setTaskTitle('')\r\n      }\r\n    } else {\r\n      setTaskInputError(true)\r\n      setTaskTitle('')\r\n    }\r\n\r\n\r\n  }\r\n  const onKeyDownAddTaskHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      onClickAddTaskHandler()\r\n    }\r\n  }\r\n  const isTitleLengthValid = taskTitle.length < 15\r\n  return (\r\n    <div className=\"todolist\">\r\n      <h3>{props.title}</h3>\r\n      <button onClick={() => removeTodolist()}>Х</button>\r\n      <div>\r\n        <input\r\n          placeholder=\"max 15 characters\"\r\n          value={taskTitle}\r\n          onChange={e => {\r\n            taskInputError && setTaskInputError(false)\r\n            setTaskTitle(e.currentTarget.value)\r\n          }\r\n          }\r\n          className={taskInputError ? 'error' : ''}\r\n          onKeyDown={onKeyDownAddTaskHandler}\r\n        />\r\n        <Button\r\n          title=\"+\"\r\n          onClickHandler={onClickAddTaskHandler}\r\n          isDisabled={!isTitleLengthValid}\r\n        />\r\n        {!isTitleLengthValid && <div style={{color: 'red'}}>Max length title is 15 characters!</div>}\r\n        {taskInputError && <div style={{color: 'red'}}>Title is required!</div>}\r\n\r\n      </div>\r\n      {tasksList}\r\n      <div>\r\n        <Button\r\n          title=\"Все\"\r\n          classes={props.filter === 'all' ? 'btn-filter-active' : ''}\r\n          onClickHandler={() => props.changeTodolistFilter('all', props.todolistId)}\r\n        />\r\n        <Button\r\n          title=\"В работе\"\r\n          classes={props.filter === 'active' ? 'btn-filter-active' : ''}\r\n          onClickHandler={() => props.changeTodolistFilter('active', props.todolistId)}\r\n        />\r\n        <Button\r\n          title=\"Выполненные\"\r\n          classes={props.filter === 'completed' ? 'btn-filter-active' : ''}\r\n          onClickHandler={() => props.changeTodolistFilter('completed', props.todolistId)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAmC,OAAO;AAEjE,SAAQC,MAAM,QAAO,UAAU;AAAA;AAc/B,OAAO,MAAMC,QAAQ,GAAIC,KAAwB,IAAK;EAAA;EACpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMQ,SAAsB,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,KAAK,CAAC,gBACnD;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA8B,gBAC9B;IAAA,UAEEP,KAAK,CAACM,KAAK,CAACE,GAAG,CAAEC,CAAW,IAAK;MAC/B,MAAMC,iBAAiB,GAAG,MAAMV,KAAK,CAACW,UAAU,CAACF,CAAC,CAACG,EAAE,EAAEZ,KAAK,CAACa,UAAU,CAAC;MACxE,MAAMC,uBAAuB,GAAIC,CAAgC,IAAKf,KAAK,CAACgB,gBAAgB,CAACP,CAAC,CAACG,EAAE,EAAEG,CAAC,CAACE,aAAa,CAACC,OAAO,EAAElB,KAAK,CAACa,UAAU,CAAC;MAC7I,oBACE;QAAA,wBACE;UACE,IAAI,EAAC,UAAU;UACf,OAAO,EAAEJ,CAAC,CAACU,MAAO;UAClB,QAAQ,EAAEL;QAAwB;UAAA;UAAA;UAAA;QAAA,QAClC,eACF;UAAM,SAAS,EAAEL,CAAC,CAACU,MAAM,GAAG,WAAW,GAAG,MAAO;UAAA,UAAEV,CAAC,CAACW;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAClE,QAAC,MAAM;UACL,KAAK,EAAC,GAAG;UACT,cAAc,EAAEV;QAAkB;UAAA;UAAA;UAAA;QAAA,QAClC;MAAA;QAAA;QAAA;QAAA;MAAA,QACC;IAET,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAED;EAEP,MAAMW,qBAAqB,GAAG,MAAM;IAClC,MAAMC,gBAAgB,GAAGrB,SAAS,CAACsB,IAAI,EAAE;IACzC,IAAID,gBAAgB,EAAE;MACpB,IAAIE,kBAAkB,EAAE;QACtBxB,KAAK,CAACyB,OAAO,CAACH,gBAAgB,EAAEtB,KAAK,CAACa,UAAU,CAAC;QACjDX,YAAY,CAAC,EAAE,CAAC;MAClB;IACF,CAAC,MAAM;MACLE,iBAAiB,CAAC,IAAI,CAAC;MACvBF,YAAY,CAAC,EAAE,CAAC;IAClB;EAGF,CAAC;EACD,MAAMwB,uBAAuB,GAAIX,CAAkC,IAAK;IACtE,IAAIA,CAAC,CAACY,GAAG,KAAK,OAAO,EAAE;MACrBN,qBAAqB,EAAE;IACzB;EACF,CAAC;EACD,MAAMG,kBAAkB,GAAGvB,SAAS,CAACM,MAAM,GAAG,EAAE;EAChD,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAA,UAAKP,KAAK,CAACoB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAQ,OAAO,EAAE,MAAMQ,cAAc,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eACnD;MAAA,wBACE;QACE,WAAW,EAAC,mBAAmB;QAC/B,KAAK,EAAE3B,SAAU;QACjB,QAAQ,EAAEc,CAAC,IAAI;UACbZ,cAAc,IAAIC,iBAAiB,CAAC,KAAK,CAAC;UAC1CF,YAAY,CAACa,CAAC,CAACE,aAAa,CAACY,KAAK,CAAC;QACrC,CACC;QACD,SAAS,EAAE1B,cAAc,GAAG,OAAO,GAAG,EAAG;QACzC,SAAS,EAAEuB;MAAwB;QAAA;QAAA;QAAA;MAAA,QACnC,eACF,QAAC,MAAM;QACL,KAAK,EAAC,GAAG;QACT,cAAc,EAAEL,qBAAsB;QACtC,UAAU,EAAE,CAACG;MAAmB;QAAA;QAAA;QAAA;MAAA,QAChC,EACD,CAACA,kBAAkB,iBAAI;QAAK,KAAK,EAAE;UAACM,KAAK,EAAE;QAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyC,EAC3F3B,cAAc,iBAAI;QAAK,KAAK,EAAE;UAAC2B,KAAK,EAAE;QAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAyB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnE,EACLzB,SAAS,eACV;MAAA,wBACE,QAAC,MAAM;QACL,KAAK,EAAC,oBAAK;QACX,OAAO,EAAEL,KAAK,CAAC+B,MAAM,KAAK,KAAK,GAAG,mBAAmB,GAAG,EAAG;QAC3D,cAAc,EAAE,MAAM/B,KAAK,CAACgC,oBAAoB,CAAC,KAAK,EAAEhC,KAAK,CAACa,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1E,eACF,QAAC,MAAM;QACL,KAAK,EAAC,6CAAU;QAChB,OAAO,EAAEb,KAAK,CAAC+B,MAAM,KAAK,QAAQ,GAAG,mBAAmB,GAAG,EAAG;QAC9D,cAAc,EAAE,MAAM/B,KAAK,CAACgC,oBAAoB,CAAC,QAAQ,EAAEhC,KAAK,CAACa,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7E,eACF,QAAC,MAAM;QACL,KAAK,EAAC,oEAAa;QACnB,OAAO,EAAEb,KAAK,CAAC+B,MAAM,KAAK,WAAW,GAAG,mBAAmB,GAAG,EAAG;QACjE,cAAc,EAAE,MAAM/B,KAAK,CAACgC,oBAAoB,CAAC,WAAW,EAAEhC,KAAK,CAACa,UAAU;MAAE;QAAA;QAAA;QAAA;MAAA,QAChF;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA9FYd,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}