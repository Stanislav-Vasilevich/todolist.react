{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/App/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Todolist from '../Todolist/Todolist';\nimport { useState } from 'react';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: v1(),\n    title: 'HTML&CSS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'JS',\n    isDone: true\n  }, {\n    id: v1(),\n    title: 'ReactJS',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Redux',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'Typescript',\n    isDone: false\n  }, {\n    id: v1(),\n    title: 'RTK query',\n    isDone: false\n  }]);\n  const [filter, setFilter] = useState('all');\n  const [date, setDate] = useState(new Date());\n  const nowDate = `${date.getHours()}:${date.getMinutes()} ${date.getDate()}.${date.getMonth()}.${date.getFullYear()}г.`;\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => !t.isDone);\n  }\n  if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone);\n  }\n  const removeTask = taskId => {\n    const newTasks = tasks.filter(t => t.id !== taskId);\n    setTasks(newTasks);\n  };\n  const changeFilter = value => {\n    setFilter(value);\n  };\n  const addTask = title => {\n    const task = {\n      id: v1(),\n      title,\n      isDone: false\n    };\n    const newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  };\n  const changeStatus = (taskId, isDone) => {\n    const newTasks = tasks.map(t => t.id === taskId ? {\n      id: v1(),\n      title: t.title,\n      isDone\n    } : t);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: 'What to learn?',\n      tasks: filteredTasks,\n      date: nowDate,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeStatus: changeStatus,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"upBHFMEJx/zC6ACqiBwD4FJ6gd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Todolist","useState","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","date","setDate","Date","nowDate","getHours","getMinutes","getDate","getMonth","getFullYear","filteredTasks","t","removeTask","taskId","newTasks","changeFilter","value","addTask","task","changeStatus","map"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist/src/components/App/App.tsx"],"sourcesContent":["import './App.css';\nimport Todolist from '../Todolist/Todolist';\nimport {useState} from 'react';\nimport {v1} from 'uuid';\n\nexport type TaskType = {\n  id: string\n  title: string\n  isDone: boolean\n}\n\nexport type FilterValuesType = 'all' | 'active' | 'completed';\n\nfunction App() {\n  const [tasks, setTasks] = useState<Array<TaskType>>([\n    {id: v1(), title: 'HTML&CSS', isDone: true},\n    {id: v1(), title: 'JS', isDone: true},\n    {id: v1(), title: 'ReactJS', isDone: false},\n    {id: v1(), title: 'Redux', isDone: false},\n    {id: v1(), title: 'Typescript', isDone: false},\n    {id: v1(), title: 'RTK query', isDone: false},\n  ]);\n  const [filter, setFilter] = useState<FilterValuesType>('all');\n  const [date, setDate] = useState(new Date());\n\n  const nowDate = `${date.getHours()}:${date.getMinutes()} ${date.getDate()}.${date.getMonth()}.${date.getFullYear()}г.`;\n\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => !t.isDone);\n  }\n  if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone);\n  }\n\n  const removeTask = (taskId: string) => {\n    const newTasks = tasks.filter(t => t.id !== taskId);\n    setTasks(newTasks);\n  }\n  const changeFilter = (value: FilterValuesType) => {\n    setFilter(value);\n  }\n  const addTask = (title: string) => {\n    const task = {id: v1(), title, isDone: false};\n    const newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n  const changeStatus = (taskId: string, isDone: boolean) => {\n    const newTasks = tasks.map(t => t.id === taskId ? {id: v1(), title: t.title, isDone} : t);\n    setTasks(newTasks);\n  }\n\n  return (\n    <div className=\"App\">\n      <Todolist\n        title={'What to learn?'}\n        tasks={filteredTasks}\n        date={nowDate}\n        removeTask={removeTask}\n        changeFilter={changeFilter}\n        addTask={addTask}\n        changeStatus={changeStatus}\n        filter={filter}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}