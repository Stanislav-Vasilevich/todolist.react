{"ast":null,"code":"var _jsxFileName = \"/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\n\n//Create\n//Read(filter, sort, search, view mode)\n//Update\n//Delete\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //BLL:\n  const todolistId_1 = v1();\n  const todolistId_2 = v1();\n  const [todolists, setTodolists] = useState([{\n    id: todolistId_1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistId_2,\n    title: 'What to bye',\n    filter: 'active'\n  }]);\n  const [tasks, setTasks] = useState({\n    [todolistId_1]: [{\n      id: v1(),\n      title: 'HTML&CSS',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'JS/TS',\n      isDone: false\n    }, {\n      id: v1(),\n      title: 'REDUX',\n      isDone: true\n    }],\n    [todolistId_2]: [{\n      id: v1(),\n      title: 'Beer',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'Cheeps',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'Whiskey',\n      isDone: true\n    }, {\n      id: v1(),\n      title: 'Cola',\n      isDone: true\n    }]\n  });\n  const removeTask = (taskId, todolistId) => {\n    setTasks({\n      ...tasks,\n      [todolistId]: tasks[todolistId].filter(t => t.id !== taskId)\n    });\n  };\n  const addTask = (title, todolistId) => {\n    const newTask = {\n      title: title,\n      isDone: false,\n      id: v1()\n    };\n    setTasks({\n      ...tasks,\n      [todolistId]: [...tasks[todolistId], newTask]\n    });\n  };\n  const setTaskNewStatus = (taskId, newStatus, todolistId) => {\n    const nextState = tasks.map(t => t.id === taskId ? {\n      ...t,\n      isDone: newStatus\n    } : t);\n    setTasks({\n      ...tasks,\n      [todolistId]: [...tasks[todolistId]]\n    });\n  };\n\n  //GUI:\n  const [filter, setFilter] = useState('all');\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => t.isDone === false);\n  }\n  if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone === true);\n  }\n  const changeFilter = newFilter => {\n    setFilter(newFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: todolistTitle,\n      tasks: filteredTasks,\n      filter: filter,\n      addTask: addTask,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      setTaskNewStatus: setTaskNewStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"v67ziC2bkogBgCGwYGwiP8X6uEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolistId_1","todolistId_2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","removeTask","taskId","todolistId","t","addTask","newTask","setTaskNewStatus","newStatus","nextState","map","setFilter","filteredTasks","changeFilter","newFilter","todolistTitle"],"sources":["/Users/stanislavasilevich/GitHub/todolist.react/todolist_2_1/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\n//Create\r\n//Read(filter, sort, search, view mode)\r\n//Update\r\n//Delete\r\n\r\nexport type TaskType = {\r\n  id: string\r\n  title: string\r\n  isDone: boolean\r\n}\r\n\r\nexport type TodolistType = {\r\n  id: string\r\n  title: string\r\n  filter: FilterValuesType\r\n}\r\n\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TasksStateType = {\r\n  [todolistId: string]: TaskType[]\r\n}\r\n\r\nfunction App() {\r\n  //BLL:\r\n  const todolistId_1 = v1();\r\n  const todolistId_2 = v1();\r\n  const [todolists, setTodolists] = useState<Array<TodolistType>>([\r\n    {\r\n      id: todolistId_1,\r\n      title: 'What to learn',\r\n      filter: 'all',\r\n    },\r\n    {\r\n      id: todolistId_2,\r\n      title: 'What to bye',\r\n      filter: 'active',\r\n    },\r\n  ]);\r\n\r\n  const [tasks, setTasks] = useState<TasksStateType>({\r\n    [todolistId_1]: [\r\n      {id: v1(), title: 'HTML&CSS', isDone: true},\r\n      {id: v1(), title: 'JS/TS', isDone: false},\r\n      {id: v1(), title: 'REDUX', isDone: true},\r\n    ],\r\n    [todolistId_2]: [\r\n      {id: v1(), title: 'Beer', isDone: true},\r\n      {id: v1(), title: 'Cheeps', isDone: true},\r\n      {id: v1(), title: 'Whiskey', isDone: true},\r\n      {id: v1(), title: 'Cola', isDone: true},\r\n    ]\r\n  });\r\n\r\n\r\n  const removeTask = (taskId: string, todolistId: string) => {\r\n    setTasks({...tasks, [todolistId]: tasks[todolistId].filter(t => t.id !== taskId)});\r\n  }\r\n\r\n  const addTask = (title: string, todolistId: string) => {\r\n    const newTask: TaskType = {\r\n      title: title,\r\n      isDone: false,\r\n      id: v1()\r\n    }\r\n\r\n    setTasks({...tasks, [todolistId]: [...tasks[todolistId], newTask]})\r\n  }\r\n  const setTaskNewStatus = (taskId: string, newStatus: boolean, todolistId: string) => {\r\n    const nextState: Array<TaskType> = tasks.map(t => t.id === taskId ? {...t, isDone: newStatus} : t)\r\n    setTasks({...tasks, [todolistId]: [...tasks[todolistId]]})\r\n  }\r\n\r\n\r\n  //GUI:\r\n  const [filter, setFilter] = useState<FilterValuesType>('all')\r\n\r\n  let filteredTasks: Array<TaskType> = tasks\r\n  if (filter === 'active') {\r\n    filteredTasks = tasks.filter(t => t.isDone === false)\r\n  }\r\n  if (filter === 'completed') {\r\n    filteredTasks = tasks.filter(t => t.isDone === true)\r\n  }\r\n\r\n  const changeFilter = (newFilter: FilterValuesType) => {\r\n    setFilter(newFilter)\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Todolist\r\n        title={todolistTitle}\r\n        tasks={filteredTasks}\r\n        filter={filter}\r\n        addTask={addTask}\r\n        removeTask={removeTask}\r\n        changeFilter={changeFilter}\r\n        setTaskNewStatus={setTaskNewStatus}\r\n      />\r\n\r\n\r\n      {/* Todolist({title: \"What to learn\"}) */}\r\n      {/* Todolist({title: \"What to buy\"}) */}\r\n      {/* <div className=\"todolist\">\r\n                <h3>What to buy</h3>\r\n                <div>\r\n                    <input/>\r\n                    <button>+</button>\r\n                </div>\r\n                <ul>\r\n                    <li><input type=\"checkbox\" checked={true}/> <span>Milk</span></li>\r\n                    <li><input type=\"checkbox\" checked={true}/> <span>Bread</span></li>\r\n                    <li><input type=\"checkbox\" checked={false}/> <span>Butter</span></li>\r\n                </ul>\r\n                <div>\r\n                    <button>All</button>\r\n                    <button>Active</button>\r\n                    <button>Completed</button>\r\n                </div>\r\n            </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}